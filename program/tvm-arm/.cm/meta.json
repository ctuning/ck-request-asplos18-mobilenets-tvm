{
  "backup_data_uid": "8f8dd5e56f4ed39e", 
  "build_compiler_vars": {
    "ARM_COMPUTE_CL": 1, 
    "EXCLUDE_MOBILENET": 0
  }, 
  "compile_deps": {
    "compiler": {
      "local": "yes", 
      "name": "C++ compiler", 
      "sort": 10, 
      "tags": "compiler,lang-cpp"
    }, 
    "library": {
      "extra_ld_vars": "$<<CK_ENV_LIB_ARMCL_LFLAG_CORE>>$", 
      "local": "yes", 
      "name": "Arm Compute Library (OpenCL & Graph APIs)", 
      "sort": 5, 
      "tags": "lib,arm-compute-library,vopencl,vgraph"
    }, 
    "opencl": {
      "local": "yes", 
      "name": "OpenCL Library", 
      "skip-installed": {
        "android": "yes"
      }, 
      "sort": 20, 
      "tags": "lib,opencl"
    }, 
    "xopenme": {
      "local": "yes", 
      "name": "xOpenME library", 
      "sort": 100, 
      "tags": "lib,xopenme"
    }
  }, 
  "compiler_add_include_as_env_from_deps": [
    "CK_ENV_LIB_STDCPP_INCLUDE", 
    "CK_ENV_LIB_STDCPP_INCLUDE_EXTRA", 
    "CK_ENV_LIB_ARMCL_UTILS"
  ], 
  "compiler_env": "CK_CXX", 
  "compiler_flags_as_env": "$<<CK_COMPILER_FLAG_CPP11>>$ $<<CK_FLAG_PREFIX_INCLUDE>>$$<<CK_ENV_LIB_ARMCL_INCLUDE>>$", 
  "data_name": "tvm-arm", 
  "linker_add_lib_as_env": [
    "CK_CXX_EXTRA", 
    "CK_ENV_LIB_STDCPP_STATIC"
  ], 
  "main_language": "cpp", 
  "only_for_target_os_tags": [
    "android", 
    "linux"
  ], 
  "print_files_after_run": [
    "tmp-stdout.tmp",
    "tmp-stderr.tmp"
  ], 
  "process_in_tmp": "yes", 
  "program": "yes", 
  "run_cmds": {
    "all": {
      "ignore_return_code": "yes", 
      "run_time": {
        "need_compute_device": "opencl", 
        "post_process_via_ck": "no",
        "post_process_cmds":[
          "python $#src_path_local#$ck_postprocess.py"
        ],
        "output_invariant_of_repeat": "yes", 
        "run_cmd_main": "$#BIN_FILE#$ all", 
        "run_cmd_out1": "tmp-stdout.tmp", 
        "run_cmd_out2": "tmp-stderr.tmp", 
        "run_output_files": [
          "tmp-ck-timer.json", 
          "tmp-ck-output.bin", 
          "tmp-ck-output.json"
        ]
      }
    },
    "run-net": {
      "ignore_return_code": "yes", 
      "run_time": {
        "post_process_cmds":[
          "python $#src_path_local#$ck_postprocess.py"
        ],
        "need_compute_device": "opencl", 
        "output_invariant_of_repeat": "yes", 
        "post_process_via_ck": "yes",
        "run_cmd_main": "$#BIN_FILE#$  $<<CK_ACL_BACKEND>>$ $<<CK_ACL_MODEL>>$ $<<CK_ACL_CONV_METHOD>>$ $<<CK_ACL_DTYPE>>$", 
        "run_cmd_out1": "tmp-stdout.tmp", 
        "run_cmd_out2": "tmp-stderr.tmp", 
        "run_output_files": [
          "tmp-ck-timer.json", 
          "tmp-ck-output.bin", 
          "tmp-ck-output.json"
        ]
      }
    },
    "help": {
      "ignore_return_code": "yes", 
      "run_time": {
        "need_compute_device": "opencl", 
        "output_invariant_of_repeat": "yes", 
        "run_cmd_main": "sh ../help.sh", 
        "run_cmd_out1": "tmp-stdout.tmp", 
        "run_cmd_out2": "tmp-stderr.tmp" 
      }
    }
  }, 
  "run_vars": {
    "CK_BATCH_SIZE": 1, 
    "CK_ACL_BACKEND":"cl",
    "CK_ACL_MODEL": "mobilenet", 
    "CK_ACL_CONV_METHOD": "gemm",
    "CK_ACL_DTYPE": "float32"
  }, 
  "skip_bin_ext": "yes", 
  "source_files": [
    "acl_test.cc", 
    "$<<CK_ENV_LIB_ARMCL_UTILS>>$/GraphUtils.cpp", 
    "$<<CK_ENV_LIB_ARMCL_UTILS>>$/Utils.cpp"
  ], 
  "tags": [
    "armcl", 
    "benchmark", 
    "armcl-benchmark", 
    "float32",
    "float16",
    "tvm", 
    "vopencl"
  ], 
  "target_file": "acl_test", 
  "version": "1.0.0"
}
